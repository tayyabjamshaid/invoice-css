import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import "../css/Login.css";
import { useNavigate } from "react-router-dom";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { fetchUsers } from "../Reducers/userAuth";

function Login() {
  const [email, setEmail] = useState();
  const [password, setPassword] = useState();

  const dispatch = useDispatch();
  const navigate = useNavigate();
  const { userInfo, error } = useSelector((state) => state.authData);

  const submitForm = (e) => {
    e.preventDefault();
    let re =
      /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if (!email) {
      toast.error("Please Enter Your Email");
    } else if (!password) {
      toast.error("Please Enter Your Password");
    } else {
      if (re.test(email)) {
        if (password.length >= 4) {
          let emailObject = { email, password };
          dispatch(fetchUsers(emailObject));
        } else {
          toast.error("Password length must be greater than 3");
        }
      } else {
        toast.error("Email must be in Email Pattern");
      }
    }
  };
  useEffect(() => {
    if (userInfo) {
      navigate("/");
    }
  }, [userInfo, navigate]);
  return (
    <div>
      <div className="loginParent">
        <div className="fields">
          <div className="perField">
            <label style={{ "marginLeft": "15%" }}>Email</label>
            <input
              type="email"
              onChange={(e) => {
                setEmail(e.target.value);
              }}
              placeholder="Enter email"
            />
          </div>
          <div className="perField">
            <label style={{ "marginLeft": "15%" }}>Password</label>
            <input
              value={password}
              onChange={(e) => {
                setPassword(e.target.value);
              }}
              type="password"
              placeholder="Enter password"
            />
          </div>
        </div>
        <div style={{ "textAlign": "center", "padding": "2% 0" }}>
          <button className="infoButton" onClick={submitForm}>
            Submit
          </button>
        </div>
        <ToastContainer
          position="bottom-right"
          autoClose={5000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
        />
      </div>
    </div>
  );
}
export default Login;
.loginParent {
  border: 1px solid black;
  width: 30%;
  margin: auto;
  margin-top: 6%;
}
.fields {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  margin-top: 5%;
}
.perField {
  width: 100%;
  display: grid;
  grid-template-columns: 30% 60%;
  margin: 2px 0;
  font-size: 20px;
  text-align: left;
  align-items: center;
}

@media only screen and (max-width: 1100px) {
  .perField {
    font-size: 15px;
  }
}
@media only screen and (max-width: 900px) {
  .perField {
    font-size: 12px;
  }
}
@media only screen and (max-width: 700px) {
  .perField {
    font-size: 9px;
  }
}
@media only screen and (max-width: 550px) {
  .perField {
    font-size: 7px;
  }
}
@media only screen and (max-width: 450px) {
  .perField {
    font-size: 6px;
    font-weight: bold;
  }
}
/* 

@media only screen and (max-width: 900px) {
  .perField {
    font-size: 13px;
  }
} */

